@using CalorieCounterV1.Models
@model CalorieCounterV1.Models.ItemIntakeViewModel

@{
    ViewBag.Title = Model.CalorieItem.Name;
}

<h2>@Model.CalorieItem.Name</h2>
@if (Model.ImagePath != null)
{
    
    <div class="img-thumbnail">
        <img src="@Url.Content(Model.ImagePath)" class="img-responsive img-rounded" height="250" width="250" />
    </div>
}


@using (Html.BeginForm())
{

    <div class="form-horizontal">
        <h4>Summary</h4>

        <table id="mytable" class="table">
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.CalorieItem.Calories)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.CalorieItem.Carbs)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CalorieItem.Protein)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CalorieItem.Fat)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CalorieItem.ServingSize)
                </th>
                <th></th>
            </tr>
            <tr>
                <td></td>
                <td>
                    @Html.DisplayFor(model => model.CalorieItem.Calories)
                </td>
                <td>
                    @Html.DisplayFor(model => model.CalorieItem.Carbs)
                </td>
                <td>
                    @Html.DisplayFor(model => model.CalorieItem.Protein)
                </td>
                <td>
                    @Html.DisplayFor(model => model.CalorieItem.Fat)
                </td>
                <td>
                    @Html.DisplayFor(model => model.CalorieItem.ServingSize)
                </td>
                <td></td>
            </tr>

        </table>
        <br />
        <br />
        <h4>Add</h4>
        @if (User.IsInRole("Member"))
        {
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.CalorieItemId, new { htmlAtrributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })<b>grams</b>

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DailyCalorieCountId, "Calorie Counts", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m=>m.SelectedCalorieCount, Model.DailyCalorieCountId, "New", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DailyCalorieCountId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add" class="btn btn-default" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <Span>Please </Span>@Html.ActionLink("Login", "Login", "Account")<span> or </span>
                    @Html.ActionLink("Register", "Register", "Account") <span> to use Calorie Counter</span>
                </div>
            </div>

        }
    </div>
}

<hr />

<div>
    @Html.ActionLink("Back to List", "FoodIndex", null, new { @class = "btn btn-warning" })
</div>
